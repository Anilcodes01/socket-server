// schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Make sure to configure your DATABASE_URL in .env file
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  email       String    @unique
  passwordHash String
  createdAt   DateTime  @default(now())
  messages    Message[] @relation("SentMessages")
  chatMembers ChatMember[]
  chats       Chat[]    @relation("ChatMembers")
}

model Chat {
  id          Int       @id @default(autoincrement())
  name        String
  createdAt   DateTime  @default(now())
  messages    Message[]
  members     ChatMember[]
  users       User[] @relation("ChatMembers")
}

model ChatMember {
  id        Int   @id @default(autoincrement())
  chatId    Int
  userId    Int
  createdAt DateTime @default(now())
  
  chat      Chat  @relation(fields: [chatId], references: [id])
  user      User  @relation(fields: [userId], references: [id])

  @@unique([chatId, userId])
}

model Message {
  id        Int      @id @default(autoincrement())
  chatId    Int
  senderId  Int
  content   String
  sentAt    DateTime @default(now())
  status    String   @default("sent") // "sent", "delivered", or "read"
  isAttachment Boolean @default(false)

  chat      Chat     @relation(fields: [chatId], references: [id])
  sender    User     @relation("SentMessages", fields: [senderId], references: [id])
  attachments Attachment[]

  @@index([chatId]) // Index on chatId for faster querying
}

model Attachment {
  id        Int      @id @default(autoincrement())
  messageId Int
  fileUrl   String
  fileType  String?
  createdAt DateTime @default(now())

  message   Message  @relation(fields: [messageId], references: [id])

  @@index([messageId]) // Index on messageId for faster querying
}
